---
- name: Setup monitoring node with Prometheus and Grafana
  hosts: monitor_node
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      args:
        warn: false

    - name: Add Docker repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: latest
        update_cache: yes

    - name: Install Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      args:
        executable: /bin/bash

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install pip for Python 3
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker

    - name: Pull Prometheus Docker image
      docker_image:
        name: prom/prometheus
        source: pull

    - name: Pull Grafana Docker image
      docker_image:
        name: grafana/grafana
        source: pull

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - /etc/prometheus:/etc/prometheus

    - name: Run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
